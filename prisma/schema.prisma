// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Department {
  CE
  IT
  ENTC
  ECE
  AIDS
}

model User {
  id          Int          @id @default(autoincrement())
  name        String?
  email       String       @unique
  password    String
  department  Department
  year        Int
  passoutYear Int
  roll        Int
  hours       Float
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  rsvps       Rsvp[]
  attendances Attendance[]
  tokens      UserToken[]  // One-to-many relation with user tokens
}

model Admin {
  id         Int           @id @default(autoincrement())
  name       String?
  email      String        @unique
  password   String
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  tokens     AdminToken[]  // One-to-many relation with admin tokens
}

model Event {
  id          Int                 @id @default(autoincrement())
  title       String
  description String
  location    String
  credits     Float
  numDays     Int
  status      EventStatus
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  rsvps       Rsvp[]
  sessions    AttendanceSession[]
}

model Rsvp {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   Int
  createdAt DateTime @default(now())

  @@unique([userId, eventId])
}

model AttendanceSession {
  id        Int       @id @default(autoincrement())
  event     Event     @relation(fields: [eventId], references: [id])
  eventId   Int
  startTime DateTime  @default(now())
  endTime   DateTime?
  code      String
  attendances Attendance[]
}

model Attendance {
  id         Int               @id @default(autoincrement())
  user       User              @relation(fields: [userId], references: [id])
  userId     Int
  session    AttendanceSession @relation(fields: [sessionId], references: [id])
  sessionId  Int
  attendedAt DateTime          @default(now())

  @@unique([userId, sessionId])
}

model UserToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model AdminToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  admin     Admin    @relation(fields: [adminId], references: [id])
  adminId   Int
  createdAt DateTime @default(now())
  expiresAt DateTime
}

enum EventStatus {
  UPCOMING
  ONGOING
  COMPLETED
} 